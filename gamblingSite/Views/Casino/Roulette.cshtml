@model gamblingSite.Models.RouletteViewModel
@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    TimeSpan timeSpan = Model.rouletteModel.SpinDate.Subtract(DateTime.Now);
}

<div class="container-fluid" id="my-main-roulette-container">
    <div class="row">
        <div class="mx-auto d-flex flex-row">
            <p class="my-timer my-text-light-color" id="text-before-timer">Next Spin in&nbsp;</p>
            <span id="timerLabel" runat="server" class="my-timer my-text-light-color">@timeSpan.Seconds</span>
            <p class="my-timer my-text-light-color" id="text-after-timer">&nbsp;seconds</p>
        </div>
        
    </div>
    
    <form method="post" class="row container">

        <div class="row w-100 container">

            <div class="col-8 container">
                <input class="col-6 form-control-plaintext my-background-light-color my-text-light-color" id="stakeInput" placeholder="0" autocomplete="off" asp-for="applicationUserRouletteModel.Stake" />
                <span asp-validation-for="applicationUserRouletteModel.Stake" class="text-danger"></span>
                <div class="col-6">
                    @*//<button onclick="plusOneToStake()" id="plusOneToStakeBtn">+1</button>*@
                    <a class="btn my-tesxt-light-color" onclick="addToStake(10)">+10</a>
                    <a class="btn my-tesxt-light-color" onclick="addToStake(100)">+100</a>
                    <a class="btn my-tesxt-light-color" onclick="addToStake(1000)">+1000</a>
                    <a class="btn my-tesxt-light-color" onclick="multiplyStake(2)">x2</a>
                    <a class="btn my-tesxt-light-color" onclick="maxStake()">Max</a>

                </div>
            </div>
            <div class="col-4 container d-flex flex-row-reverse">
                <img class="my-chip-balance-icon" src="~/icons/chip-balance.png" />
                <p class="my-text-light-color my-balance-text">@ViewBag.Balance&nbsp;</p>

            </div>
            
        </div>

        <div class=" row w-100 container">
            <div class="col-4 align-self-center">
                <div class="container w-100 mx-1 d-flex flex-row">
                    <img class="my-chip-form-icon" src="~/icons/chip-red.png" />
                    <button type="submit" name="red" value="red" class="w-100 btn-danger">Win x2</button>
                </div>
            </div>

            <div class="col-4 align-self-center">
                <div class="container w-100 mx-1 d-flex flex-row">
                    <img class="my-chip-form-icon" src="~/icons/chip-green.png" />
                    <button type="submit" name="green" value="green" class="w-100 btn-success">Win x7</button>
                </div>

            </div>

            <div class="col-4 align-self-center">
                <div class="container w-100 mx-1 d-flex flex-row">
                    <img class="my-chip-form-icon" src="~/icons/chip-black.png" />
                    <button type="submit" name="black" value="black" class="w-100 btn-dark">Win x2</button>
                </div>
            </div>
        </div>

    </form>

</div>


@section Scripts{
    <script type="text/javascript">

        function addToStake(i) {

            var value = document.getElementById('stakeInput').value;
            if (value.length == 0) {
                value = "0";
                var decValue = (parseFloat(value) + i).toString();
                document.getElementById('stakeInput').value = decValue;
            }
            else {
                value = value.replace(",", ".");
                var decValue = (parseFloat(value) + i).toString();
                document.getElementById('stakeInput').value = decValue.replace(".", ",");
            }
        }

        function multiplyStake(i) {
            var value = document.getElementById('stakeInput').value;
            if (value.length == 0) {
                value = "0";
                var decValue = (parseFloat(value) * i).toString();
                document.getElementById('stakeInput').value = decValue;
            }
            else {
                value = value.replace(",", ".");
                var decValue = (parseFloat(value) * i).toString();
                document.getElementById('stakeInput').value = decValue.replace(".", ",");
            }
        }
        function maxStake() {
            document.getElementById('stakeInput').value = @ViewBag.Balance;
        }

        function countdown() {
            seconds = document.getElementById("timerLabel").innerHTML;

            if (seconds > 0) {
                document.getElementById("timerLabel").innerHTML = seconds - 1;
                setTimeout("countdown()", 1000);
            }
            else {

                document.getElementById("timerLabel").innerHTML = "Starting";
                hideTimerText();
                setTimeout(reloadPage(), 2000);
            }
        }
        function hideTimerText() {
            document.getElementById("text-before-timer").innerHTML = "";
            document.getElementById("text-after-timer").innerHTML = "";
        }
        function reloadPage()
        {
            location.reload(true);
        }

        setTimeout("countdown()", 1000);

    </script>
}