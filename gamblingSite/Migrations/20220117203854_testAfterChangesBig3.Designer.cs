// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using gamblingSite.Models;

namespace gamblingSite.Migrations
{
    [DbContext(typeof(AppDBContext))]
    [Migration("20220117203854_testAfterChangesBig3")]
    partial class testAfterChangesBig3
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("gamblingSite.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("WalletSize")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("ApplicationUser");
                });

            modelBuilder.Entity("gamblingSite.Models.ApplicationUserRouletteModel", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("SpinId")
                        .HasColumnType("int");

                    b.Property<string>("Colour")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Stake")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("UserId", "SpinId");

                    b.HasIndex("SpinId");

                    b.ToTable("ApplicationUserRouletteModels");
                });

            modelBuilder.Entity("gamblingSite.Models.RouletteModel", b =>
                {
                    b.Property<int>("SpinID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Colour")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SpinDate")
                        .HasColumnType("datetime2");

                    b.HasKey("SpinID");

                    b.ToTable("RouletteModels");
                });

            modelBuilder.Entity("gamblingSite.Models.ApplicationUserRouletteModel", b =>
                {
                    b.HasOne("gamblingSite.Models.RouletteModel", "RouletteModel")
                        .WithMany("ApplicationUserRouletteModels")
                        .HasForeignKey("SpinId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("gamblingSite.Models.ApplicationUser", "ApplicationUser")
                        .WithMany("ApplicationUserRouletteModels")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationUser");

                    b.Navigation("RouletteModel");
                });

            modelBuilder.Entity("gamblingSite.Models.ApplicationUser", b =>
                {
                    b.Navigation("ApplicationUserRouletteModels");
                });

            modelBuilder.Entity("gamblingSite.Models.RouletteModel", b =>
                {
                    b.Navigation("ApplicationUserRouletteModels");
                });
#pragma warning restore 612, 618
        }
    }
}
